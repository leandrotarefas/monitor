import java.io.*;
import java.net.*;
import java.nio.file.*;
import java.text.SimpleDateFormat;
import java.util.Date;

public class DualSocket {
    private static final int SERVER_PORT = 50817;
    private static final int CLIENT_PORT = 50818;

    public static void main(String[] args) throws IOException {
        new Thread(() -> {
            try {
                startServer(SERVER_PORT);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }).start();

        new Thread(() -> {
            try {
                startClient(CLIENT_PORT);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }).start();
    }

    public static void startServer(int port) throws IOException {
        ServerSocket serverSocket = new ServerSocket(port);
        System.out.println("Servidor iniciado na porta: " + port);

        while (true) {
            Socket clientSocket = serverSocket.accept();
            System.out.println("Cliente conectado: " + clientSocket.getRemoteSocketAddress());
            InputStream inputStream = clientSocket.getInputStream();
            byte[] buffer = new byte[4096];
            int bytesRead;

            while ((bytesRead = inputStream.read(buffer)) != -1) {
                String fileName = new SimpleDateFormat("yyyyMMddHHmmssSSS").format(new Date()) + ".txt";
                try (FileOutputStream fos = new FileOutputStream(fileName)) {
                    fos.write(buffer, 0, bytesRead);
                }
                System.out.println("Arquivo " + fileName + " criado com " + bytesRead + " bytes");
                sendDataToClient(buffer, bytesRead);
            }
        }
    }

    public static void startClient(int port) throws IOException {
        String serverHost = "localhost";
        Socket socket = new Socket(serverHost, port);
        System.out.println("Cliente conectado ao servidor " + serverHost + " na porta " + port);
    }

    private static Socket clientSocket;

    public static void sendDataToClient(byte[] data, int length) throws IOException {
        if (clientSocket == null || clientSocket.isClosed()) {
            clientSocket = new Socket("localhost", CLIENT_PORT);
        }

        OutputStream outputStream = clientSocket.getOutputStream();
        outputStream.write(data, 0, length);
        outputStream.flush();
    }
}
