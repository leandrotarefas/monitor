import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class SimpleTCPServer {

    public static void main(String[] args) {
        int portNumber = 1234; // Porta em que o servidor irá escutar

        try (ServerSocket serverSocket = new ServerSocket(portNumber)) {
            System.out.println("Servidor TCP iniciado na porta " + portNumber);

            while (true) {
                Socket clientSocket = serverSocket.accept();
                System.out.println("Cliente conectado: " + clientSocket.getInetAddress());

                // Lidar com a conexão em uma nova thread
                Thread clientThread = new Thread(() -> handleClientConnection(clientSocket));
                clientThread.start();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void handleClientConnection(Socket clientSocket) {
        try (BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
             PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true)) {

            // Ler a mensagem do cliente
            String message = in.readLine();
            System.out.println("Mensagem recebida do cliente: " + message);

            // Enviar uma resposta para o cliente
            out.println("Resposta do servidor: Mensagem recebida com sucesso!");

        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                clientSocket.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
